<?php

namespace App\Http\Controllers;

use Illuminate\Support\Facades\Auth;
use Illuminate\Http\Request;
use App\Models\CartItem;
use App\Models\Coupon; // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏° use ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÑ‡∏ü‡∏•‡πå
use Carbon\Carbon;     // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏° use ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÑ‡∏ü‡∏•‡πå
use App\Models\Product;   // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ


class CartController extends Controller
{
    /**
     * ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
     */
    public function index()
    {
        $cartItems = \App\Models\CartItem::with('product')
            ->where('user_id', Auth::id())
            ->get();
        return view('cartpage.index', ['cartItems' => $cartItems]);
    }

    public function store(Request $request)
    {
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ product_id ‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏£‡∏¥‡∏á
        $request->validate([
            'product_id' => 'required|exists:products,id',
        ]);

        $userId = Auth::id();
        $productId = $request->product_id;

        // 2. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á User ‡∏ô‡∏µ‡πâ "‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        $cartItem = CartItem::where('user_id', $userId)
            ->where('product_id', $productId)
            ->first();

        if ($cartItem) {
            // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß => ‡πÉ‡∏´‡πâ‡∏ö‡∏ß‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (quantity) ‡πÄ‡∏û‡∏¥‡πà‡∏° 1
            $cartItem->increment('quantity');
        } else {
            // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ => ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà
            CartItem::create([
                'user_id' => $userId,
                'product_id' => $productId,
                'quantity' => 1
            ]);
        }

        // 3. ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ Redirect ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
        return redirect()->route('cartpage.index')->with('success', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß!');
    }

    public function update(Request $request, CartItem $cartItem)
    {
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤ User ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏à‡∏£‡∏¥‡∏á
        if ($cartItem->user_id != Auth::id()) {
            return abort(403);
        }

        // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤ (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1)
        $request->validate([
            'quantity' => 'required|integer|min:1',
        ]);

        // 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
        $cartItem->update([
            'quantity' => $request->quantity
        ]);

        return redirect()->route('cartpage.index')->with('success', '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß!');
    }

    /**
     * ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
     */
    public function destroy(CartItem $cartItem)
    {
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á
        if ($cartItem->user_id != Auth::id()) {
            return abort(403);
        }

        // 2. ‡∏•‡∏ö
        $cartItem->delete();

        return redirect()->route('cartpage.index')->with('success', '‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß!');
    }



    public function applyCoupon(Request $request)
    {
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö code
        $coupon = Coupon::where('code', $request->coupon_code)->first();

        // 2. Validation
        if (!$coupon) {
            return redirect()->route('cartpage.index')->with('error', 'Coupon code ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!');
        }
        if (!$coupon->is_active) {
            return redirect()->route('cartpage.index')->with('error', 'Coupon ‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
        }
        if ($coupon->start_date && $coupon->start_date->isFuture()) {
            return redirect()->route('cartpage.index')->with('error', 'Coupon ‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
        }
        if ($coupon->end_date && $coupon->end_date->isPast()) {
            return redirect()->route('cartpage.index')->with('error', 'Coupon ‡∏ô‡∏µ‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß');
        }

        // 3. ‡∏ñ‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏°‡∏î ‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á Session
        session(['coupon' => $coupon]);

        return redirect()->route('cartpage.index')->with('success', '‡πÉ‡∏ä‡πâ Coupon ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    }

    /**
     * ‡∏•‡∏ö‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å
     */
    public function removeCoupon()
    {
        session()->forget('coupon');
        return redirect()->route('cartpage.index')->with('success', '‡∏•‡∏ö Coupon ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß');
    }

    public function addToCart($id)
    {
        $product = Product::findOrFail($id);

        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
        $cartItem = CartItem::where('user_id', Auth::id())
            ->where('prod_id', $product->product_id)
            ->first();

        if ($cartItem) {
            $cartItem->quantity += 1;
            $cartItem->save();
        } else {
            CartItem::create([
                'user_id' => Auth::id(),
                'prod_id' => $product->product_id,
                'quantity' => 1,
                'unit_price' => $product->price,
            ]);
        }

        return redirect()->back()->with('success', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
    }
}
